@model Illiyeen.Models.ViewModels.ProductListViewModel
@{
    ViewData["Title"] = Model.SelectedCategory?.Name ?? "Category";
}

<div class="container my-5">
    <!-- Category Header -->
    @if (Model.SelectedCategory != null)
    {
        <div class="category-header mb-5">
            <div class="row align-items-center">
                <div class="col-lg-8">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Product")">Products</a></li>
                            <li class="breadcrumb-item active" aria-current="page">@Model.SelectedCategory.Name</li>
                        </ol>
                    </nav>
                    <h1 class="display-5 fw-bold mb-3">@Model.SelectedCategory.Name</h1>
                    <p class="lead text-muted">@Model.SelectedCategory.Description</p>
                    <p class="text-muted">@Model.TotalProducts products available</p>
                </div>
                <div class="col-lg-4 text-end">
                    @if (!string.IsNullOrEmpty(Model.SelectedCategory.ImageUrl))
                    {
                        <img src="@Model.SelectedCategory.ImageUrl" class="img-fluid rounded shadow" alt="@Model.SelectedCategory.Name" style="max-height: 200px;">
                    }
                    else
                    {
                        <div class="category-icon">
                            <i class="fas fa-@(GetCategoryIcon(Model.SelectedCategory.Slug)) fa-5x text-gold"></i>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <div class="row">
        <!-- Sidebar Filters -->
        <div class="col-lg-3">
            <div class="filters-sidebar">
                <!-- Search Filter -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-dark text-gold">
                        <h6 class="mb-0"><i class="fas fa-search me-2"></i>Search Products</h6>
                    </div>
                    <div class="card-body">
                        <form method="get" action="@Url.Action("Index", "Product")">
                            @if (Model.SelectedCategory != null)
                            {
                                <input type="hidden" name="categoryId" value="@Model.SelectedCategory.Id">
                            }
                            <div class="input-group">
                                <input type="text" class="form-control" name="search" value="@Model.SearchQuery" placeholder="Search in @(Model.SelectedCategory?.Name ?? "category")...">
                                <button class="btn btn-outline-gold" type="submit">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Sort Options -->
               @*  <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-dark text-gold">
                        <h6 class="mb-0"><i class="fas fa-sort me-2"></i>Sort By</h6>
                    </div>
                    <div class="card-body">
                        <form method="get" id="sortForm">
                            <input type="hidden" name="search" value="@Model.SearchQuery">
                            @if (Model.SelectedCategory != null)
                            {
                                <input type="hidden" name="categoryId" value="@Model.SelectedCategory.Id">
                            }
                            <select class="form-select" name="sortBy" onchange="document.getElementById('sortForm').submit()">
                                <option value="">Featured</option>
                                <option value="name" @(Model.SortBy == "name" ? "selected" : "")>Name (A-Z)</option>
                                <option value="price_asc" @(Model.SortBy == "price_asc" ? "selected" : "")>Price: Low to High</option>
                                <option value="price_desc" @(Model.SortBy == "price_desc" ? "selected" : "")>Price: High to Low</option>
                                <option value="newest" @(Model.SortBy == "newest" ? "selected" : "")>Newest First</option>
                            </select>
                        </form>
                    </div>
                </div>
 *@
                <!-- Other Categories -->
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-dark text-gold">
                        <h6 class="mb-0"><i class="fas fa-tags me-2"></i>Browse Categories</h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush">
                            <a href="@Url.Action("Index", "Product")" 
                               class="list-group-item list-group-item-action @(Model.SelectedCategory == null ? "active" : "")">
                                All Products
                            </a>
                            @foreach (var category in Model.Categories)
                            {
                                <a href="@Url.Action("Category", "Product", new { slug = category.Slug })" 
                                   class="list-group-item list-group-item-action @(Model.SelectedCategory?.Id == category.Id ? "active" : "")">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span>@category.Name</span>
                                        <span class="badge bg-gold text-dark">@category.Products.Count(p => p.IsActive)</span>
                                    </div>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9">
            <!-- Results Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h5 class="mb-0">
                        @if (!string.IsNullOrEmpty(Model.SearchQuery))
                        {
                            <span>Search results for "@Model.SearchQuery"</span>
                        }
                        else if (Model.SelectedCategory != null)
                        {
                            <span>@Model.SelectedCategory.Name Collection</span>
                        }
                        else
                        {
                            <span>All Products</span>
                        }
                    </h5>
                    <small class="text-muted">@Model.TotalProducts products found</small>
                </div>
                <div class="view-options">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-gold active" id="gridView">
                            <i class="fas fa-th"></i>
                        </button>
                        <button type="button" class="btn btn-outline-gold" id="listView">
                            <i class="fas fa-list"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Products -->
            @if (Model.Products.Any())
            {
                <div class="products-container" id="productsGrid">
                    <div class="row g-4">
                        @foreach (var product in Model.Products)
                        {
                            <div class="col-lg-4 col-md-6">
                                <div class="product-card card border-0 shadow-sm h-100">
                                    <div class="product-image position-relative">
                                        <img src="@(product.ImageUrl ?? "https://via.placeholder.com/300x300/d4af37/000000?text=" + Uri.EscapeDataString(product.Name))" 
                                             class="card-img-top" alt="@product.Name" style="height: 250px; object-fit: cover;">
                                        <div class="product-overlay">
                                            <div class="d-flex gap-2 justify-content-center">
                                                <a href="@Url.Action("Details", "Product", new { id = product.Id })" 
                                                   class="btn btn-gold btn-sm">
                                                    <i class="fas fa-eye me-1"></i>View
                                                </a>
                                                @if (User.Identity?.IsAuthenticated == true && product.InStock)
                                                {
                                                    <button class="btn btn-outline-light btn-sm add-to-cart-btn" 
                                                            data-product-id="@product.Id">
                                                        <i class="fas fa-shopping-cart"></i>
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                        @if (!product.InStock)
                                        {
                                            <div class="position-absolute top-0 end-0 m-2">
                                                <span class="badge bg-danger">Out of Stock</span>
                                            </div>
                                        }
                                        @if (product.IsFeatured)
                                        {
                                            <div class="position-absolute top-0 start-0 m-2">
                                                <span class="badge bg-gold text-dark">Featured</span>
                                            </div>
                                        }
                                    </div>
                                    <div class="card-body">
                                        <h6 class="card-title fw-bold">
                                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" 
                                               class="text-decoration-none text-dark">
                                                @product.Name
                                            </a>
                                        </h6>
                                        <p class="card-text text-muted small">
                                            @(product.Description.Length > 80 ? product.Description.Substring(0, 80) + "..." : product.Description)
                                        </p>
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <span class="h6 text-gold fw-bold mb-0">৳@product.Price.ToString("N0")</span>
                                            @if (product.ReviewCount > 0)
                                            {
                                                <div class="rating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <i class="fas fa-star @(i <= product.AverageRating ? "text-warning" : "text-muted")"></i>
                                                    }
                                                    <span class="text-muted ms-1">(@product.ReviewCount)</span>
                                                </div>
                                            }
                                        </div>
                                        @if (User.Identity?.IsAuthenticated == true && product.InStock)
                                        {
                                            <button class="btn btn-outline-gold btn-sm w-100 add-to-cart-btn" 
                                                    data-product-id="@product.Id">
                                                <i class="fas fa-shopping-cart me-1"></i>Add to Cart
                                            </button>
                                        }
                                        else if (!User.Identity?.IsAuthenticated == true)
                                        {
                                            <a href="@Url.Action("Login", "Account")" class="btn btn-outline-gold btn-sm w-100">
                                                Login to Purchase
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Product pagination" class="mt-5">
                        <ul class="pagination justify-content-center">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Category", new { 
                                        slug = Model.SelectedCategory?.Slug,
                                        page = Model.CurrentPage - 1, 
                                        search = Model.SearchQuery,
                                        sortBy = Model.SortBy 
                                    })">Previous</a>
                                </li>
                            }
                            
                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Category", new { 
                                        slug = Model.SelectedCategory?.Slug,
                                        page = i, 
                                        search = Model.SearchQuery,
                                        sortBy = Model.SortBy 
                                    })">@i</a>
                                </li>
                            }
                            
                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Category", new { 
                                        slug = Model.SelectedCategory?.Slug,
                                        page = Model.CurrentPage + 1, 
                                        search = Model.SearchQuery,
                                        sortBy = Model.SortBy 
                                    })">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <!-- No Products Found -->
                <div class="text-center py-5">
                    <i class="fas fa-search fa-4x text-muted mb-3"></i>
                    <h4>No products found</h4>
                    @if (!string.IsNullOrEmpty(Model.SearchQuery))
                    {
                        <p class="text-muted">No products match your search for "@Model.SearchQuery".</p>
                        <a href="@Url.Action("Category", "Product", new { slug = Model.SelectedCategory?.Slug })" class="btn btn-gold">
                            Clear Search
                        </a>
                    }
                    else
                    {
                        <p class="text-muted">This category doesn't have any products yet.</p>
                        <a href="@Url.Action("Index", "Product")" class="btn btn-gold">
                            Browse All Products
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetCategoryIcon(string slug)
    {
        return slug switch
        {
            "mens-fashion" => "male",
            "womens-fashion" => "female",
            "accessories" => "handbag",
            "watches" => "clock",
            "home-lifestyle" => "home",
            _ => "tag"
        };
    }
}

@section Scripts {
    <script src="~/js/cart.js"></script>
    <script>
        // View toggle functionality
        document.getElementById('listView').addEventListener('click', function() {
            document.getElementById('gridView').classList.remove('active');
            this.classList.add('active');
            // Implementation for list view would go here
        });

        document.getElementById('gridView').addEventListener('click', function() {
            document.getElementById('listView').classList.remove('active');
            this.classList.add('active');
            // Grid view is default
        });
    </script>
}
