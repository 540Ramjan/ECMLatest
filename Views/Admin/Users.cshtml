@model IEnumerable<Illiyeen.Models.User>
@{
    ViewData["Title"] = "Manage Users";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="dashboard-header mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="fw-bold">Users</h1>
            <p class="text-muted">Manage customer accounts and user data</p>
        </div>
        <div class="d-flex gap-2">
            <select class="form-select" id="roleFilter">
                <option value="">All Users</option>
                <option value="Admin">Admins</option>
                <option value="Customer">Customers</option>
            </select>
            <input type="text" class="form-control" placeholder="Search users..." id="searchInput">
        </div>
    </div>
</div>

<!-- User Statistics -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6">
        <div class="card bg-gradient-primary text-white">
            <div class="card-body text-center">
                <div class="h3">@Model.Count()</div>
                <div>Total Users</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="card bg-gradient-success text-white">
            <div class="card-body text-center">
                <div class="h3">@Model.Count(u => u.LastLoginAt.HasValue)</div>
                <div>Active Users</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="card bg-gradient-info text-white">
            <div class="card-body text-center">
                <div class="h3">@Model.Count(u => u.CreatedAt >= DateTime.Now.AddDays(-30))</div>
                <div>New This Month</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="card bg-gradient-warning text-white">
            <div class="card-body text-center">
                <div class="h3">@Model.Count(u => u.Orders.Any())</div>
                <div>With Orders</div>
            </div>
        </div>
    </div>
</div>

<!-- Users Table -->
<div class="card shadow">
    <div class="card-header bg-dark text-gold">
        <h5 class="mb-0">
            <i class="fas fa-users me-2"></i>User List
        </h5>
    </div>
    <div class="card-body p-0">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="usersTable">
                    <thead class="bg-light">
                        <tr>
                            <th>User</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Location</th>
                            <th>Orders</th>
                            <th>Last Login</th>
                            <th>Registered</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr data-user-id="@user.Id">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="user-avatar me-3">
                                            <div class="avatar-circle bg-gold text-dark">
                                                @user.FirstName.Substring(0, 1).ToUpper()@user.LastName.Substring(0, 1).ToUpper()
                                            </div>
                                        </div>
                                        <div>
                                            <strong>@user.FullName</strong>
                                            <small class="text-muted d-block">@user.UserName</small>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span>@user.Email</span>
                                    @if (user.EmailConfirmed)
                                    {
                                        <i class="fas fa-check-circle text-success ms-1" title="Email Verified"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-exclamation-circle text-warning ms-1" title="Email Not Verified"></i>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                    {
                                        <span>@user.PhoneNumber</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not provided</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(user.City))
                                    {
                                        <span>@user.City</span>
                                        @if (!string.IsNullOrEmpty(user.PostalCode))
                                        {
                                            <small class="text-muted d-block">@user.PostalCode</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not provided</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@user.Orders.Count orders</span>
                                    @if (user.Orders.Any())
                                    {
                                        <small class="text-muted d-block">
                                            à§³@user.Orders.Sum(o => o.TotalAmount).ToString("N0") total
                                        </small>
                                    }
                                </td>
                                <td>
                                    @if (user.LastLoginAt.HasValue)
                                    {
                                        <span>@user.LastLoginAt.Value.ToString("MMM dd, yyyy")</span>
                                        <small class="text-muted d-block">@user.LastLoginAt.Value.ToString("hh:mm tt")</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Never</span>
                                    }
                                </td>
                                <td>
                                    @user.CreatedAt.ToString("MMM dd, yyyy")
                                    <small class="text-muted d-block">@user.CreatedAt.ToString("hh:mm tt")</small>
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                            Actions
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="viewUserDetails('@user.Id')">View Details</a></li>
                                            <li><a class="dropdown-item" href="#" onclick="viewUserOrders('@user.Id')">View Orders</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" href="#" onclick="sendEmailToUser('@user.Email')">Send Email</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deactivateUser('@user.Id')">Deactivate</a></li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-users fa-4x text-muted mb-3"></i>
                <h4>No users found</h4>
                <p class="text-muted">User accounts will appear here when people register.</p>
            </div>
        }
    </div>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-gold">
                <h5 class="modal-title">User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="userDetailsContent">
                <!-- User details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const filter = this.value.toLowerCase();
            const rows = document.querySelectorAll('#usersTable tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(filter) ? '' : 'none';
            });
        });

        // Role filter functionality
        document.getElementById('roleFilter').addEventListener('change', function() {
            const filter = this.value;
            // Implementation would depend on how roles are displayed
            // For now, just a placeholder
        });

        function viewUserDetails(userId) {
            document.getElementById('userDetailsContent').innerHTML = '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</div>';
            const modal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
            modal.show();
            
            // Here you would fetch user details via AJAX
            setTimeout(() => {
                document.getElementById('userDetailsContent').innerHTML = `
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        User details functionality will be implemented here.
                    </div>
                `;
            }, 1000);
        }

        function viewUserOrders(userId) {
            // Redirect to orders page with user filter
            window.location.href = `/admin/orders?userId=${userId}`;
        }

        function sendEmailToUser(email) {
            // Implementation for sending email
            alert(`Send email to ${email} - functionality to be implemented`);
        }

        function deactivateUser(userId) {
            if (!confirm('Are you sure you want to deactivate this user?')) {
                return;
            }

            // Implementation for user deactivation
            alert('User deactivation functionality to be implemented');
        }
    </script>

    <style>
        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 14px;
        }
    </style>
}
